{"version":3,"sources":["actions/nodes.js","components/TreeBeard/treebeardStyle.js","components/TreeBeard/treebeard.js","jsonToTreebeard.js","App.js","reducers/nodeReducer.js","reducers/combinedReducers.js","index.js"],"names":["TOGGLE_NODE","treebeardStyle","tree","base","listStyle","backgroundColor","padding","color","fontFamily","fontSize","width","height","border","overflow","margin-top","margin-bottom","node","position","div","display","cursor","link","activeLink","background","toggle","verticalAlign","marginLeft","wrapper","top","left","margin","arrow","fill","strokeWidth","header","connector","borderLeft","borderBottom","title","lineHeight","subtree","paddingLeft","loading","decorators","Header","_ref2","style","icon","_ref","children","undefined","length","setIcon","nodeName","name","replace","parents","react_default","a","createElement","List","Item","Icon","Content","className","status","TB","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onToggle","bind","assertThisInitialized","prevProps","prevState","snapshot","_this$props","data","nodeToUpdate","findPath","find","path","i","hasOwnProperty","toggled","active","setState","toggleNode","react_treebeard","styles","Component","mapDispatchToProps","type","payload","connect","nodes","modifyParentName","JSONtoArray","obj","parentName","arguments","arr","key","concat","hasNoChildren","entries","constructor","push","el","App","parseDate","timestamp","dateObj","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","year","getFullYear","month","getMonth","day","getDay","date","getDate","0","1","2","3","4","5","6","7","8","9","10","11","leftData","JSONParser","dataSource","rightData","right","leftDate","info","endTimestamp","rightDate","react","treebeard","nodeReducer","action","objectSpread","reducers","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4229b716.chunk.js","sourcesContent":["export const TOGGLE_NODE = 'TOGGLE_NODE';\r\n\r\nexport function toggleNode(node){\r\n    return{\r\n        type: TOGGLE_NODE,\r\n        payload: node,\r\n    }\r\n}","\n\nexport default {\n    tree: {\n        base: {\n            listStyle: 'none',\n            backgroundColor: '#50565d',\n            padding: '2px 5px',\n            color: '#c6ced4',\n            fontFamily: 'lucida grande ,tahoma,verdana,arial,sans-serif',\n            fontSize: '14px',\n            width: '100%',\n            height: '100%',\n            border: '1px solid #c6ced4',\n            overflow: 'auto',\n            'margin-top': '5px',\n            'margin-bottom': '0',\n        },\n\n        node: {\n            base: {\n                position: 'relative',\n\n                div: {\n                    display: 'flex',\n                    cursor: 'pointer',\n                }\n            },\n            link: {\n                cursor: 'pointer',\n                position: 'relative',\n                padding: '0px 5px',\n                display: 'block'\n            },\n            activeLink: {\n                background: '#31363F'\n            },\n            toggle: {\n                base: {\n                    position: 'relative',\n                    display: 'inline-block',\n                    verticalAlign: 'center',\n                    marginLeft: '0',\n                    height: '15px',\n                    width: '15px'\n                },\n                wrapper: {\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    margin: '-5px 0 0 -6px',\n                    height: '14px'\n                },\n                height: 10,\n                width: 10,\n                arrow: {\n                    fill: '#9DA5AB',\n                    strokeWidth: 0\n                }\n            },\n            header: {\n                display: 'flex',\n                base: {\n                    display: 'inline-block',\n                    verticalAlign: 'top',\n                    color: '#9DA5AB'\n                },\n                connector: {\n                    width: '2px',\n                    height: '12px',\n                    borderLeft: 'solid 2px black',\n                    borderBottom: 'solid 2px black',\n                    position: 'absolute',\n                    top: '0px',\n                    left: '-21px'\n                },\n                title: {\n                    lineHeight: '24px',\n                    verticalAlign: 'middle'\n                }\n            },\n            subtree: {\n                listStyle: 'none',\n                paddingLeft: '19px',\n            },\n            loading: {\n                color: '#E2C089'\n            }\n        }\n    }\n};\n","import React, {Component} from 'react';\r\nimport {toggleNode} from \"../../actions/nodes\";\r\nimport {connect} from \"react-redux\";\r\nimport {Treebeard, decorators} from 'react-treebeard';\r\nimport {List} from 'semantic-ui-react';\r\nimport styles from './treebeardStyle';\r\n\r\n\r\nfunction setIcon({loading, children}){\r\n    if (loading === true){\r\n        return 'folder';\r\n    } else if (children === undefined || children.length === 0){\r\n        return 'file';\r\n    } else {\r\n        return 'folder';\r\n    }\r\n}\r\n\r\ndecorators.Header = ({node, style}) => {\r\n    // Decorate TreeBeard header in order to display Semantic UI List items.\r\n\r\n    const icon = setIcon(node);\r\n    const nodeName = node.name.replace(node.parents, '');\r\n\r\n    return (\r\n        <List.Item style={style}>\r\n            <List.Icon name={icon}/>\r\n            <List.Content>\r\n                <List.Header className={node.status}>{nodeName}</List.Header>\r\n            </List.Content>\r\n        </List.Item>\r\n    );\r\n};\r\n\r\nfunction findPath(data, cursor) {\r\n\r\n    // Check top level for node to update\r\n    let nodeToUpdate = data.find(node => node.path === cursor.path);\r\n\r\n    // If node is not found on top level, recursively search through children\r\n    if (!nodeToUpdate && data) {\r\n        for(let i = 0; i < data.length; i++){\r\n            const node = data[i];\r\n            if(node.children && node.hasOwnProperty('children')){\r\n                nodeToUpdate = findPath(node.children, cursor);\r\n                if(nodeToUpdate){\r\n                    return nodeToUpdate;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodeToUpdate;\r\n}\r\n\r\nclass TB extends Component {\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n        const {data, cursor} = this.props;\r\n\r\n        const nodeToUpdate = findPath(data, cursor);\r\n\r\n        if (nodeToUpdate && nodeToUpdate.toggled !== cursor.toggled) {\r\n            nodeToUpdate.toggled = cursor.toggled;\r\n            nodeToUpdate.active = cursor.active;\r\n\r\n            this.setState({cursor: nodeToUpdate})\r\n        }\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.onToggle = this.onToggle.bind(this);\r\n    }\r\n\r\n    onToggle(node, toggled){\r\n        node.active = true;\r\n\r\n        if (node.children) {\r\n            node.toggled = toggled\r\n        }\r\n\r\n        this.setState({cursor: node});\r\n\r\n        // Add toggled node to Redux store as a cursor\r\n        this.props.toggleNode(node)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Treebeard\r\n                data={this.props.data}\r\n                onToggle={this.onToggle}\r\n                style = {styles}\r\n                decorators={decorators}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        cursor: state.nodes,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    toggleNode,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TB);\r\n\r\n\r\n","\r\n\r\nfunction modifyParentName(parents){\r\n    switch (parents) {\r\n        case 'storage':\r\n            return '-storages-';\r\n        case 'interfaces':\r\n            return '-snmp-interfaces-';\r\n        case 'elements':\r\n            return '';\r\n        default:\r\n            return parents;\r\n    }\r\n}\r\n\r\nexport default function JSONtoArray(obj, parentName = ''){\r\n    const arr = [];\r\n\r\n    // Iterate through all keys in JSON\r\n    for (const key in obj){\r\n        if(obj.hasOwnProperty(key)){\r\n            const parents = parentName.concat(modifyParentName(key));\r\n            const status = obj[key]['status'] ? obj[key]['status'] : 'unchanged';\r\n            const hasNoChildren = (Object.entries(obj[key]).length === 0 && obj[key].constructor === Object)\r\n                                || (Object.entries(obj[key]).length === 1 && Object.entries(obj[key])[0][0] === 'status');\r\n\r\n            // General case for objects\r\n            if(typeof obj[key] === 'object' && obj[key] !== null && key !== 'elements'){\r\n\r\n                arr.push({\r\n                    'name': key,\r\n                    'status': status,\r\n                    'parents': parentName,\r\n                    'path': parents,\r\n                });\r\n\r\n                // Add array with child nodes only if children are present\r\n                if (!hasNoChildren){\r\n                    arr[arr.length - 1]['children'] = JSONtoArray(obj[key], parents);\r\n                }\r\n\r\n            // Special case for 'elements' array\r\n            } else if (key === 'elements'){\r\n                for (const el in obj[key]){\r\n                    if(obj[key].hasOwnProperty(el)){\r\n                        arr.push({\r\n                            'name': obj[key][el]['name'],\r\n                            'status': obj[key][el]['status'],\r\n                            'parents': parentName,\r\n                        });\r\n                    }\r\n                }\r\n            // General case for non-objects\r\n            } else {\r\n                // Do not include status nodes for parents\r\n                if (key !== 'status'){\r\n                    arr.push({\r\n                        'name': obj[key],\r\n                        'parents': parentName,\r\n                        'status': status\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return arr\r\n}","import React, { Component, Fragment } from 'react';\nimport dataSource from './test-data';\nimport TreeBeard from './components/TreeBeard/treebeard';\nimport JSONParser from './jsonToTreebeard';\n\n\n\nclass App extends Component {\n\n    parseDate = (timestamp) => {\n\n        const weekdays = {0:'Sunday', 1:'Monday', 2:'Tuesday', 3:'Wednesday', 4:'Thursday', 5:'Friday', 6:'Saturday'};\n        const months = {0:'January', 1:'February', 2:'March', 3:'April', 4:'May', 5:'June', 6:'July', 7:'August',\n                        8:'September', 9:'October', 10:'November', 11:'December'};\n        const dateObj =  new Date(timestamp);\n        const hours = dateObj.getHours();\n        const minutes = dateObj.getMinutes();\n        const seconds = dateObj.getSeconds();\n        const year = dateObj.getFullYear();\n        const month = dateObj.getMonth();\n        const day = dateObj.getDay();\n        const date = dateObj.getDate();\n\n        return `${weekdays[day]}, ${months[month]} ${date}, ${year} ${hours}:${minutes}:${seconds}`;\n    };\n\n    render() {\n    const leftData = JSONParser(dataSource.left.nodes);\n    const rightData = JSONParser(dataSource.right.nodes);\n    const leftDate = this.parseDate(dataSource.left.info.endTimestamp);\n    const rightDate = this.parseDate(dataSource.right.info.endTimestamp);\n\n\n    return (\n        <Fragment>\n            <div className='comparatorArea'>\n                <div className='comparatorArea__half'>\n                    <div className={'timeArea'}>{leftDate}</div>\n                    <TreeBeard data={leftData}/>\n                </div>\n                <div className='comparatorArea__half'>\n                    <div className={'timeArea'}>{rightDate}</div>\n                    <TreeBeard data={rightData}/>\n                </div>\n            </div>\n        </Fragment>\n    );\n    }\n}\n\nexport default App;\n","import {TOGGLE_NODE} from \"../actions/nodes\";\r\n\r\nfunction nodeReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case TOGGLE_NODE:\r\n            return{\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default nodeReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport nodes from './nodeReducer';\r\n\r\nlet reducers = combineReducers({\r\n    nodes,\r\n});\r\n\r\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux';\nimport reducers from \"./reducers/combinedReducers\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport 'semantic-ui-css/semantic.css';\n\nconst store = createStore(reducers, composeWithDevTools());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}